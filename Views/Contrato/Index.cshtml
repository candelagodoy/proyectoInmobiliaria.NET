@model IEnumerable<proyectoInmobiliaria.NET.Models.Contrato>

@{
	ViewData["Title"] = "Home Page";
	IList<Inquilino>? listaInquilinos = (IList<Inquilino>)ViewBag.Inquilinos;
	IList<Inmueble>? listaInmuebles = (IList<Inmueble>)ViewBag.Inmuebles;
}

@if (TempData["Ok"] is string ok)
{
	<div class="alert alert-success">@ok</div>
}
@if (TempData["Error"] is string err)
{
	<div class="alert alert-danger">@err</div>
}

<h1>
	Contratos
	<div class="btn-group pull-right">
		<a class="btn btn-primary" asp-action="Create" title="Crear">Crear</a>
	</div>
</h1>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.idContrato)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.monto)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.fechaDesde)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.fechaHasta)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.idUsuarioAlta)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.idInmueble)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.idInquilino)
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.idContrato)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.monto)
				</td>
				<td>
					@item.fechaDesde.ToString("dd/MM/yyyy")
				</td>
				<td>
					@item.fechaHasta.ToString("dd/MM/yyyy")
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.idUsuarioAlta)
				</td>
				<td>
					@foreach (var t in listaInmuebles)
					{
						if (t.idInmueble == item.idInmueble)
						{
							@t.ToString();
							
						}
					}
				</td>
				<td>
					@foreach (var t in listaInquilinos)
					{
						if (t.id == item.idInquilino)
						{
							@t.ToString();
							
						}
					}
				</td>
				@if (item.idUsuarioBaja != null)
				{
					<td>
						@Html.DisplayFor(modelItem => item.idUsuarioBaja)
					</td>
				}

				<td>
					<div class="btn-group" role="group">
						<a class="btn btn-primary btnOpcion" asp-action="Edit" asp-route-id="@item.idContrato"
							title="Editar">
							Editar
						</a>
						<a class="btn btn-secondary" asp-action="Detalles" asp-controller="Contrato"
							asp-route-id="@item.idContrato" title="Detalles">
							Detalles
						</a>
						<a class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#renovarModal"
							data-id="@item.idContrato" data-fechahasta="@item.fechaHasta.ToString("yyyy-MM-dd")"
							data-monto="@item.monto">
							Renovar
						</a>
						@if (User.IsInRole("Administrador"))
						{
							<a class="btn btn-danger btnOpcion" asp-action="Delete" asp-route-id="@item.idContrato"
								title="Eliminar">
								Eliminar
							</a>
						}

					</div>
				</td>
			</tr>
		}
	</tbody>
</table>
@if (User.IsInRole(role: "Administrador"))
{
	<div class="btn-group pull-right">
		<a class="btn btn-primary" asp-action="Anulados" title="Crear"> Contratos finalizados </a>
	</div>
}

<div class="modal fade" id="renovarModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-sm">
		<div class="modal-content">
			<div class="modal-header py-2">
				<h5 class="modal-title">Renovar contrato</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
			</div>
			<form asp-action="Renovar" asp-controller="Contrato" method="post" class="p-3 pt-0">
				@Html.AntiForgeryToken()

				<!-- id del contrato a renovar -->
				<input type="hidden" name="idContrato" id="ren-id" />

				<!-- Inicio sugerido del nuevo contrato (día siguiente). Se envía oculto al POST -->
				<input type="hidden" name="fechaDesde" id="ren-fechaDesde" />

				<div class="mb-2">
					<label class="form-label">Última fecha del contrato actual</label>
					<input type="date" class="form-control" id="ren-ultima" readonly />
				</div>

				<div class="mb-2">
					<label class="form-label">Inicio del nuevo contrato</label>
					<input type="date" class="form-control" id="ren-desde" readonly />
				</div>

				<div class="mb-2">
					<label class="form-label">Hasta (nueva)</label>
					<input type="date" class="form-control" name="fechaHasta" id="ren-hasta" required />
				</div>

				<div class="mb-3">
					<label class="form-label">Monto nuevo</label>
					<input type="number" step="0.01" class="form-control" name="monto" id="ren-monto" required />
				</div>

				<div class="d-flex justify-content-end gap-2">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
					<button type="submit" class="btn btn-warning">Confirmar</button>
				</div>
			</form>
		</div>
	</div>
</div>


<div class="modal fade" id="renovarModal" tabindex="-1" aria-hidden="true">
</div>

@section Scripts {
	<script>
		// === Script para poblar el modal ===
		function toYMD(d) { const z = n => ('0' + n).slice(-2); return d.getFullYear() + '-' + z(d.getMonth() + 1) + '-' + z(d.getDate()); }

		const renovarModal = document.getElementById('renovarModal');
		renovarModal.addEventListener('show.bs.modal', function (ev) {
			const btn = ev.relatedTarget;
			const id = btn.getAttribute('data-id');
			const hastaStr = btn.getAttribute('data-fechahasta'); // yyyy-MM-dd
			const montoActual = btn.getAttribute('data-monto');

			const ultima = new Date(hastaStr + 'T00:00:00');
			const desde = new Date(ultima); desde.setDate(desde.getDate() + 1);

			document.getElementById('ren-id').value = id;
			document.getElementById('ren-ultima').value = toYMD(ultima);
			document.getElementById('ren-desde').value = toYMD(desde);
			document.getElementById('ren-fechaDesde').value = toYMD(desde);
			document.getElementById('ren-hasta').value = '';
			document.getElementById('ren-monto').value = '';
			document.getElementById('ren-monto').placeholder = montoActual || '';
		});
	</script>
}